"""reset relationships

Revision ID: 6ecdb9f4ac9d
Revises: 
Create Date: 2025-02-22 16:02:41.546694

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6ecdb9f4ac9d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.drop_index('ix_comment_timestamp')
        batch_op.drop_column('timestamp')

    with op.batch_alter_table('poll', schema=None) as batch_op:
        batch_op.alter_column('poll_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('course')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('poll', schema=None) as batch_op:
        batch_op.add_column(sa.Column('course', sa.VARCHAR(length=200), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('poll_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               nullable=False)

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', sa.DATETIME(), nullable=True))
        batch_op.create_index('ix_comment_timestamp', ['timestamp'], unique=False)
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###
